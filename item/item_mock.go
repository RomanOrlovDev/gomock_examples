// Code generated by MockGen. DO NOT EDIT.
// Source: item.go

// Package item is a generated GoMock package.
package item

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIsnterface is a mock of Isnterface interface.
type MockIsnterface struct {
	ctrl     *gomock.Controller
	recorder *MockIsnterfaceMockRecorder
}

// MockIsnterfaceMockRecorder is the mock recorder for MockIsnterface.
type MockIsnterfaceMockRecorder struct {
	mock *MockIsnterface
}

// NewMockIsnterface creates a new mock instance.
func NewMockIsnterface(ctrl *gomock.Controller) *MockIsnterface {
	mock := &MockIsnterface{ctrl: ctrl}
	mock.recorder = &MockIsnterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIsnterface) EXPECT() *MockIsnterfaceMockRecorder {
	return m.recorder
}

// Elements mocks base method.
func (m *MockIsnterface) Elements() []FacadeItem {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Elements")
	ret0, _ := ret[0].([]FacadeItem)
	return ret0
}

// Elements indicates an expected call of Elements.
func (mr *MockIsnterfaceMockRecorder) Elements() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Elements", reflect.TypeOf((*MockIsnterface)(nil).Elements))
}

// MockFacadeItem is a mock of FacadeItem interface.
type MockFacadeItem struct {
	ctrl     *gomock.Controller
	recorder *MockFacadeItemMockRecorder
}

// MockFacadeItemMockRecorder is the mock recorder for MockFacadeItem.
type MockFacadeItemMockRecorder struct {
	mock *MockFacadeItem
}

// NewMockFacadeItem creates a new mock instance.
func NewMockFacadeItem(ctrl *gomock.Controller) *MockFacadeItem {
	mock := &MockFacadeItem{ctrl: ctrl}
	mock.recorder = &MockFacadeItemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFacadeItem) EXPECT() *MockFacadeItemMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockFacadeItem) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockFacadeItemMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockFacadeItem)(nil).GetName))
}

// GetNameWithValidation mocks base method.
func (m *MockFacadeItem) GetNameWithValidation() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNameWithValidation")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNameWithValidation indicates an expected call of GetNameWithValidation.
func (mr *MockFacadeItemMockRecorder) GetNameWithValidation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNameWithValidation", reflect.TypeOf((*MockFacadeItem)(nil).GetNameWithValidation))
}

// Id mocks base method.
func (m *MockFacadeItem) Id() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Id")
	ret0, _ := ret[0].(int)
	return ret0
}

// Id indicates an expected call of Id.
func (mr *MockFacadeItemMockRecorder) Id() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Id", reflect.TypeOf((*MockFacadeItem)(nil).Id))
}
