// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMyStructer is a mock of MyStructer interface.
type MockMyStructer struct {
	ctrl     *gomock.Controller
	recorder *MockMyStructerMockRecorder
}

// MockMyStructerMockRecorder is the mock recorder for MockMyStructer.
type MockMyStructerMockRecorder struct {
	mock *MockMyStructer
}

// NewMockMyStructer creates a new mock instance.
func NewMockMyStructer(ctrl *gomock.Controller) *MockMyStructer {
	mock := &MockMyStructer{ctrl: ctrl}
	mock.recorder = &MockMyStructerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyStructer) EXPECT() *MockMyStructerMockRecorder {
	return m.recorder
}

// CreateMyStruct mocks base method.
func (m *MockMyStructer) CreateMyStruct() MyStruct {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMyStruct")
	ret0, _ := ret[0].(MyStruct)
	return ret0
}

// CreateMyStruct indicates an expected call of CreateMyStruct.
func (mr *MockMyStructerMockRecorder) CreateMyStruct() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMyStruct", reflect.TypeOf((*MockMyStructer)(nil).CreateMyStruct))
}
